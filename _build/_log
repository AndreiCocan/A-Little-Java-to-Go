### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules main.ml > main.ml.depends # cached
# Target: error.ml.depends, tags: { extension:ml, file:error.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules error.ml > error.ml.depends # cached
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules lexer.ml > lexer.ml.depends # cached
# Target: location.ml.depends, tags: { extension:ml, file:location.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules location.ml > location.ml.depends # cached
# Target: location.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:location.cmo, file:location.ml, implem, ocaml, quiet }
ocamlc.opt -c -o location.cmo location.ml # cached
# Target: parser.mly.depends, tags: { extension:mly, file:parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --explain --dump --raw-depend --ocamldep 'ocamldep.opt -modules' parser.mly > parser.mly.depends
# Target: LMJ.mli.depends, tags: { extension:mli, file:LMJ.mli, ocaml, ocamldep, quiet }
ocamldep.opt -modules LMJ.mli > LMJ.mli.depends
# Target: LMJ.cmi, tags: { byte, compile, extension:mli, file:LMJ.mli, interf, ocaml, quiet }
ocamlc.opt -c -o LMJ.cmi LMJ.mli
+ ocamlc.opt -c -o LMJ.cmi LMJ.mli
File "LMJ.mli", line 31, characters 12-23:
31 | | SBlock of instruction list
                 ^^^^^^^^^^^
Error: Unbound type constructor instruction
Command exited with code 2.
# Compilation unsuccessful.
